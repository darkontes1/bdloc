<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * BookRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BookRepository extends EntityRepository
{
    public function allResults()
    {
        $qd=$this->createQueryBuilder('b');
        $qd->select('b','a','c','s')
        ->leftJoin('b.dessinateur', 'a')
        ->leftJoin('b.scenariste', 'c')
        ->leftJoin('b.coloriste', 's');
        $query=$qd->getQuery();
        $query->setMaxResults(10);
        $result=$query->getResult();

        return $result;
    }

    public function cateResult($cate, $exem, $mc)
    {
        $qd=$this->createQueryBuilder('b');

        $qd->select('b','a','c','s','se')
        ->leftJoin('b.dessinateur', 'a')
        ->leftJoin('b.scenariste', 'c')
        ->leftJoin('b.coloriste', 's')
        ->leftJoin('b.serie','se');

        if(!empty($cate)){
            $qd->andwhere('se.style = :cate');
            $qd->setParameter("cate",$cate);
        }

        if(!empty($exem)){
            $qd->andwhere('b.exemplaires = :exem');
            $qd->setParameter("exem",$exem);
        }

        if(!empty($mc)){
            $qd->andwhere('b.title = :mc');
            $qd->setParameter("mc",$mc);
        }
        
        $query=$qd->getQuery();
        $query->setMaxResults(10);
        $result=$query->getResult();

        return $result;
    }
}
